 <!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>

    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/jquery-1.12.4.js"></script>
    <link href="~/Content/Site.css" rel="stylesheet" />


    <link href="//cdn.datatables.net/1.10.9/css/jquery.dataTables.min.css" rel="stylesheet" />
    <script src="//cdn.datatables.net/1.10.9/js/jquery.dataTables.min.js"></script>
    <link href="~/assets/node_modules/sweetalert/sweetalert.css" rel="stylesheet" />
    <script src="~/assets/node_modules/sweetalert/jquery.sweet-alert.custom.js"></script>
    <script src="~/assets/node_modules/sweetalert/sweetalert.min.js"></script>
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Application name", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Home", "Index", "Home")</li>
                    <li>@Html.ActionLink("About", "About", "Home")</li>
                    <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - My ASP.NET Application</p>
        </footer>
    </div>




    <script src="~/Scripts/jquery-1.10.2.min.map.js"></script>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    @*@Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")
        @RenderSection("scripts", required: false)*@

</body>
</html>


<script>
    var currentRow1 = "";
    var r = "";
    $(document).ready(function () {

        function myFunction() {
            document.getElementById('CurrentDate').value = Date();
        }

        $(document).on('change', '#orderdetailsitems .VAT', function () {
            currentRow1 = $(this).closest("tr");
            calculatevat();
            SUMOFALLPRODUCT();
            sumofGrandModel();
            

        });

        LoadProduct();

        $("#add").click(function () {

            currentRow1 = $(this).closest("tr");

            var isAllValid = true;
            if ($("#SelectProductQutation").val() == "0") {
                isAllValid = false;
                alert("Please select Item");
            }

            if (isAllValid) {
                var $newRow = $("#mainrow").clone().removeAttr('id');
                $('.product', $newRow).val($("#SelectProductQutation").val());
                $('.VAT', $newRow).val($("#SelectVAT").val());

                //Replace add button with remove button
                $("#add", $newRow).addClass('remove').val('Remove').removeClass('btn-success').addClass('btn-danger');

                //Remove id attribute from new clone row

                $("#SelectProductQutation,#Quantity,#Rate,#FTotal,#SelectVAT", $newRow).removeAttr('id');

                $('span.error', $newRow).remove();

                $('#orderdetailsitems').append($newRow);

                $('#SelectProductQutation').val('0');
                $('#Quantity').val('');
                $('#Rate').val('');
                $('#FTotal').val('');

                if ($('#orderItemError').text != '') {
                    $('#orderItemError').text('');
                }

                calculatevat();
                SUMOFALLPRODUCT();
                sumofGrandModel();

            }
        });



        function calculatevat() {
            debugger;
            if ($('#orderdetailsitems tr').length == 0) {
                $('#btwo').text('0.00');
                $('#BTW6').text('0.00');
                $('#BTW21').text('0.00');
            }
            else {

                var sum0 = 0;
                var total0 = 0;
                $('#orderdetailsitems tr').each(function () {
                    $('#BTW0').text();

                    r = $(this).closest('tr');
                    var value = r.find('.VAT  option:selected').val();
                    if (r.find('.VAT  option:selected').val() == 0) {
                        total0 = r.find('td:eq(3)').find('input').val();
                        if (!isNaN(total0) && total0.length != 0) {
                            sum0 += parseInt(total0);
                        }
                        var totalvat0 = parseFloat(sum0 / 100 * 6 + sum0 - sum0);
                        var totalr = Math.round(totalvat0, 2);
                        $('#BTW0').text(totalvat0.toFixed(2));
                    }
                    else {
                        $('#BTW0').text('0.00');
                    }
                })
            }

            var sum6 = 0;
            var total6 = 0;
            $('#orderdetailsitems tr').each(function () {
                var r = $(this).closest('tr');
                var value = r.find('.VAT  option:selected').val();
                if (r.find('.VAT  option:selected').val() == 6) {
                    total6 = r.find('td:eq(3)').find('input').val();
                    if (!isNaN(total6) && total6.length != 0) {
                        sum6 += parseInt(total6);
                    }
                    var totalvat6 = parseFloat(sum6 / 100 * 6 + sum6 - sum6);
                    var totalr = Math.round(totalvat6, 2);
                    $('#BTW6').text(totalvat6.toFixed(2));
                }
            })

            var sum21 = 0;
            var total21 = 0;
            $('#orderdetailsitems tr').each(function () {
                //$('#BTW21').text();
                var r = $(this).closest('tr');
                var value = r.find('.VAT  option:selected').val();
                if (r.find('.VAT  option:selected').val() == 21) {

                    total21 = r.find('td:eq(3)').find('input').val();
                    if (!isNaN(total21) && total21.length != 0) {
                        sum21 += parseInt(total21);
                    }
                    var totalvat21 = parseFloat(sum21 / 100 * 21 + sum21 - sum21);

                    $('#BTW21').text(totalvat21);
                }

            })
             RowCounte();
        }
        $(document).ready(function () {

            $(document).on('click', '#RemoveEdit', function () {
                var row = $(this).closest('tr');

                var QIDId = row.find('td').find('.QutationDetailId').val();
                var total1 = row.find('td').find('.FTotal').val();
                var vat = row.find('td').find('.VAT').val();
                var QID = row.find('td').find('.QutationID').val();

                var data = JSON.stringify({
                    QutationId: QID,
                    QutationDetailID: QIDId,
                    vat: vat,
                    total: total1
                })
                $.ajax({
                    url: "/MVCQutation/DeleteQuatation",
                    type: "POST",
                    async: false,
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    data: data,
                    success: function (data) {
                        if (data == "Success") {
                            alert("success");
                            $("#" + QIDId).remove();
                            calculatevat();
                            SUMOFALLPRODUCT();
                            sumofGrandModel();
                        }
                        else {
                            swal(
                              'Delete!',
                              'fail to delete record!',
                              'danger'
                            )
                        }
                    },
                    Error: function (errormessage) {
                        //alert(errormessage);
                    }

                });
            });
        });

        //SUMOFALLPRODUCT();
        /// sumofGrandModel();

        function RowCounte() {

            var rowCount6 = 0;
            var rowCount21 = 0;
            var rowCount0 = 0;

            $('#orderdetailsitems tr td').each(function () {


                var EquationResult = $(this).find('.VAT').val();

                if (EquationResult == 6) {
                    rowCount6++;

                }
                else if (EquationResult == 21) {
                    rowCount21++;
                }
                else if (EquationResult == 0) {
                    rowCount0++
                }
            })

            if (rowCount0 == 0) {
                $("#btwo").text('0.00');
            }
            if (rowCount6 == 0) {
                $("#BTW6").text('0.00');
            }
            if (rowCount21 == 0) {
                $("#BTW21").text('0.00');
            }

            if ($('#orderdetailsitems tr').length == 0) {

                $('#SubTotal').text();
                $('#TotalBTW').text();
                $('#gtotal').text();
            }
        }

        $('#orderdetailsitems').on('click', '.remove', function () {

            var currentRow = $(this).closest('tr');
            var vat = currentRow.find('.VAT  option:selected').val();
            var Total = currentRow.find('.FTotal').val();
            if (vat == 6) {
                var totalvat6 = parseInt(Total / 100) * 6 + (Total - Total);

                var BTW6 = $('#BTW6').text();
                $('#BTW6').text();
                $('#BTW6').text(parseInt(BTW6 - totalvat6));

            }
            if (vat == 21) {
                var currentRow = $(this).closest('tr');
                var vat21 = currentRow.find('.VAT  option:selected').val();
                var Total21 = currentRow.find('.FTotal').val();
                if (vat == 21) {
                    var totalvat21 = parseFloat(Total21 / 100) * 21 + (Total21 - Total21);

                    var BTW21 = $('#BTW21').text();
                    $('#BTW21').text();
                    $('#BTW21').text(parseFloat(BTW21 - totalvat21));

                }
            }
            $(this).parents('tr').remove();
            SUMOFALLPRODUCT();
            sumofGrandModel();
            //reset all totals
            if ($('#orderdetailsitems tr').length == 0) {
                $('#SubTotal').text('');
                $('#TotalBTW').text('');
                $('#gtotal').text('');
                $('#BTW6').text('');
                $('#BTW21').text('');
                $('#btwo').text('');
            }
        });

        $("#Submit").click(function () {

            var isAllValid = true;
            $('#orderItemError').text('');

            var list = [];
            var errorItemCount = 0;
            $('#orderdetailsitems tbody tr').each(function (index, ele) {
                if ($('#SelectProductQutation', this).val() == '0' ||
                    (parseInt($('.quantity', this).val()) || 0) == 0 ||
                    $('.rate', this).val() == "" ||
                    isNaN($('.rate', this).val())
                    ) {
                    errorItemCount++;
                    $(this).addClass('error');
                }
                else {
                    var orderItem = {
                        ItemId: $('select.product', this).val(),
                        Quantity: parseInt($('.quantity', this).val()),
                        Rate: parseFloat($('.rate', this).val()),
                        TotalAmount: parseFloat($('.FTotal', this).val()),
                        Total: parseFloat($('.FTotal', this).val()),
                        Vat: parseFloat($('.VAT', this).val())
                    }
                    list.push(orderItem);
                }
            });

            if (errorItemCount > 0) {
                $("#orderItemError").text(errorItemCount + "Invalid entry in order itme list.");
                isAllValid = false;
            }

            if (list.length == 0) {

                $("#orderItemError").text("At least one order item required.");
                isAllValid = false;
            }

            if (isAllValid) {
                $(this).val("please wait...");
                var empObj = {
                    Qutation_ID: $('#Qutation_ID').val(),
                    RefNumber: $('#RefNumber').val(),
                    QutationDate: $('#QutationDate').val(),
                    DueDate: $('#DueDate').val(),
                    SubTotal: $('#SubTotal').text(),
                    DiscountAmount: $('#DiscountAmount').val(),
                    Vat: $('#Vat').val(),
                    Total: $('#gtotal').text(),
                    CustomerNote: $('#CustomerNote').val(),
                    TotalVat6: $('#BTW6').text(),
                    TotalVat21: $('#BTW21').text(),
                    QutationDetailslist: list

                };
                $.ajax({
                    url: "/MVCQutation/Save",
                    data: JSON.stringify(empObj),
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.Status = "Success") {                       
                            list = [];
                            $('#Qutation_ID,#RefNumber,#SubTotal,#DiscountAmount,#Vat,#TotalAmount,#CustomerNote').val('');
                            $('#orderdetailsitems').empty();
                            $("#Submit").val('Save');

                            swal({
                                title: 'Qutation!',
                                text: 'Qutation save successfully!',
                                type: 'success'
                            },
                      function (isconform) {
                          window.location.href = "/MvcQutation/ViewQuation?quautionId=" + result.QutationId;
                      });
                        }

                        else if (result.Status = "Fail") {
                            swal(
                                 'Qutation!',
                                   result.message,
                                 'danger'
                            )
                        }

                    },
                    error: function (errormessage) {

                        swal(
                                 'Qutation!',
                                   errormessage.responseText,
                                 'danger'
                            )


                    }

                });

            }

        });

        //Edit functionality
        $("#SubmitEdit").click(function () {
            var isAllValid = true;
            $('#orderItemError').text('');
            var list = [];
            var errorItemCount = 0;
            $('#orderdetailsitems tbody').children('tr:not(:first)').each(function (index, ele) {
                {
                    var orderItem = {
                        ItemId: $('.product ', this).val(),
                        Quantity: parseInt($('.quantity', this).val()),
                        Rate: parseFloat($('.rate', this).val()),
                        TotalAmount: parseFloat($('.FTotal', this).val()),
                        Total: parseFloat($('.FTotal', this).val()),
                        Vat: parseFloat($('.VAT', this).val()),
                        QutationID: $('#QutationID').val(),
                        QutationDetailId: parseInt($('.QutationDetailId', this).val()),
                        Qutation_ID: $('#Qutation_ID').val()
                    }
                    list.push(orderItem);
                }
            });
            if (list.length == 0) {

                $("#orderItemError").text("At least one order item required.");
                isAllValid = false;
            }

            if (isAllValid) {
                $(this).val("please wait...");
                var empObj = {
                    Qutation_ID: $('#Qutation_ID').val(),
                    RefNumber: $('#RefNumber').val(),
                    QutationDate: $('#QutationDate').val(),
                    DueDate: $('#DueDate').val(),
                    SubTotal: $('#SubTotal').text(),
                    DiscountAmount: $('#DiscountAmount').val(),
                    QutationID: $('#QutationID').val(),
                    TotalVat6: $('#BTW6').text(),
                    TotalVat21: $('#BTW21').text(),
                    Total: $('#gtotal').text(),
                    TotalAmount: $('#gtotal').text(),
                    CustomerNote: $('#CustomerNote').val(),
                    QutationDetailslist: list
                };
                $.ajax({
                    url: "/MVCQutation/AddOrEdit",
                    data: JSON.stringify(empObj),
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.Status == "Success") {
                            list = [];
                            $('#Qutation_ID,#RefNumber,#SubTotal,#DiscountAmount,#Vat,#TotalAmount,#CustomerNote').val('');
                            $('#orderdetailsitems').empty();
                            $("#SubmitEdit").val('Save Draft');
                            window.location.href = "/MvcQutation/ViewQuation?quautionId=" + result.QutationId;        
                        }
                        else if (result.Status == "Fail") {
                            alert(result.messa)
                        }

                        
                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            }
        });
    });





    /// save ptint and send it to your self
    $('#saveprintandsendtoyourself').click(function () {
        var QutationIdd;
        var isAllValid = true;
        $('#orderItemError').text('');
        var list = [];
        var errorItemCount = 0;
        $('#orderdetailsitems tbody').children('tr:not(:first)').each(function (index, ele) {
            {
                var orderItem = {
                    ItemId: $('.product ', this).val(),
                    Quantity: parseInt($('.quantity', this).val()),
                    Rate: parseFloat($('.rate', this).val()),
                    TotalAmount: parseFloat($('.FTotal', this).val()),
                    Total: parseFloat($('.FTotal', this).val()),
                    Vat: parseFloat($('.VAT', this).val()),
                    QutationID: $('#QutationID').val(),
                    QutationDetailId: parseInt($('.QutationDetailId', this).val()),
                    Qutation_ID: $('#Qutation_ID').val()
                }
                list.push(orderItem);
            }
        });

        if (list.length == 0) {

            $("#orderItemError").text("At least one order item required.");
            isAllValid = false;
        }

        if (isAllValid) {
            $(this).val("please wait...");
            var empObj = {
                Qutation_ID: $('#Qutation_ID').val(),
                RefNumber: $('#RefNumber').val(),
                QutationDate: $('#QutationDate').val(),
                DueDate: $('#DueDate').val(),
                SubTotal: $('#SubTotal').text(),
                DiscountAmount: $('#DiscountAmount').val(),
                QutationID: $('#QutationID').val(),
                TotalVat6: $('#BTW6').text(),
                TotalVat21: $('#BTW21').text(),
                Total: $('#gtotal').text(),
                TotalAmount: $('#gtotal').text(),
                CustomerNote: $('#CustomerNote').val(),
                QutationDetailslist: list
            };
            $.ajax({
                url: "/MVCQutation/savePrintAndSentItToYourSenf",
                data: JSON.stringify(empObj),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    QutationIdd = result.QutationId;
                    localStorage.setItem('path', result.path);
                    if (result.Status == "Success") {
                        swal({
                            title: 'Qutation!',
                            text: 'Qutation save successfully!',
                            type: 'success'
                        },
                        function (isconform) {
                            window.location.href = "/MvcQutation/ViewQuation?quautionId=" + result.QutationId;
                        });
                    }
                    else if(result.Status == "Fail")

                    {

                    }
                },

                error: function (errormessage) {

                }

            });
        }

    });

    function DownloadFile(filepath) {
        debugger;
        $.ajax({
            url: "/MVCQutation/DownloadFile",
            data: JSON.stringify({ FilePath: filepath }),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {

            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }

        });
    }
 
    $("#saveEmail").click(function () {
      
        var isAllValid = true;
        $('#orderItemError').text('');
        var list = [];
        var errorItemCount = 0;
        $('#orderdetailsitems tbody tr').each(function (index, ele) {
            {
                var orderItem = {
                    ItemId: $('.product ', this).val(),
                    Quantity: parseInt($('.quantity', this).val()),
                    Rate: parseFloat($('.rate', this).val()),
                    TotalAmount: parseFloat($('.FTotal', this).val()),
                    Total: parseFloat($('.FTotal', this).val()),
                    Vat: parseFloat($('.VAT', this).val()),
                    QutationID: $('#QutationID').val(),
                    QutationDetailId: parseInt($('.QutationDetailId', this).val()),
                    Qutation_ID: $('#Qutation_ID').val()
                }
                list.push(orderItem);
            }
        });

        if (list.length == 0) {

            $("#orderItemError").text("At least one order item required.");
            isAllValid = false;
        }

        if (isAllValid) {
            $(this).val("please wait...");
            var empObj = {
                Qutation_ID: $('#Qutation_ID').val(),
                RefNumber: $('#RefNumber').val(),
                QutationDate: $('#QutationDate').val(),
                DueDate: $('#DueDate').val(),
                SubTotal: $('#SubTotal').text(),
                DiscountAmount: $('#DiscountAmount').val(),
                QutationID: $('#QutationID').val(),
                TotalVat6: $('#BTW6').text(),
                TotalVat21: $('#BTW21').text(),
                Total: $('#gtotal').text(),
                TotalAmount: $('#gtotal').text(),
                CustomerNote: $('#CustomerNote').val(),
                QutationDetailslist: list
            };
            $.ajax({
                url: "/MVCQutation/SaveEmailAdd",
                data: JSON.stringify(empObj),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                   
                        if (result.Status == "Success") {
                            swal({
                                title: 'Qutation!',
                                text: 'Qutation save successfully!',
                                type: 'success'
                            },
                            function (isconform) {
                                window.location.href = "/MvcQutation/InvoiceByEmail?QutationId=" + result.QutationId;
                            });

                        }
                        else if (result.Status == "Fail") {

                          

                        }        
                  
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }

            });

        }

    });

    $("#saveEmailedit").click(function () {
        var isAllValid = true;
        $('#orderItemError').text('');
        var list = [];
        var errorItemCount = 0;
        $('#orderdetailsitems tbody').children('tr:not(:first)').each(function (index, ele) {
            {
                var orderItem = {
                    ItemId: $('.product ', this).val(),
                    Quantity: parseInt($('.quantity', this).val()),
                    Rate: parseFloat($('.rate', this).val()),
                    TotalAmount: parseFloat($('.FTotal', this).val()),
                    Total: parseFloat($('.FTotal', this).val()),
                    Vat: parseFloat($('.VAT', this).val()),
                    QutationID: $('#QutationID').val(),
                    QutationDetailId: parseInt($('.QutationDetailId', this).val()),
                    Qutation_ID: $('#Qutation_ID').val()
                }
                list.push(orderItem);
            }
        });

        if (list.length == 0) {

            $("#orderItemError").text("At least one order item required.");
            isAllValid = false;
        }

        if (isAllValid) {
            $(this).val("please wait...");
            var empObj = {
                Qutation_ID: $('#Qutation_ID').val(),
                RefNumber: $('#RefNumber').val(),
                QutationDate: $('#QutationDate').val(),
                DueDate: $('#DueDate').val(),
                SubTotal: $('#SubTotal').text(),
                DiscountAmount: $('#DiscountAmount').val(),
                QutationID: $('#QutationID').val(),
                TotalVat6: $('#BTW6').text(),
                TotalVat21: $('#BTW21').text(),
                Total: $('#gtotal').text(),
                TotalAmount: $('#gtotal').text(),
                CustomerNote: $('#CustomerNote').val(),
                QutationDetailslist: list
            };
            $.ajax({
                url: "/MVCQutation/SaveEmail",
                data: JSON.stringify(empObj),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.Status == "Success") {

                        window.location.href = "/MvcQutation/InvoiceByEmail?QutationId=" + result.QutationId;
                    }
                    else if (result.Status == "Fail") {

                    }
                    // $("#genratePdf").submit();
                    list = [];
                    //$('#Qutation_ID,#RefNumber,#SubTotal,#DiscountAmount,#Vat,#TotalAmount,#CustomerNote').val('');
                    //$('#orderdetailsitems').empty();
                    //$("#SubmitEdit").val('Save Draft');
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }

            });

        }

    });

    $('#saveprintandsendtoyourselfsave').click(function () {
        var QutationIdd;
        var isAllValid = true;
        $('#orderItemError').text('');
        var list = [];
        var errorItemCount = 0;
        $('#orderdetailsitems tbody tr').each(function (index, ele) {
            {
                var orderItem = {
                    ItemId: $('.product ', this).val(),
                    Quantity: parseInt($('.quantity', this).val()),
                    Rate: parseFloat($('.rate', this).val()),
                    TotalAmount: parseFloat($('.FTotal', this).val()),
                    Total: parseFloat($('.FTotal', this).val()),
                    Vat: parseFloat($('.VAT', this).val()),
                    QutationID: $('#QutationID').val(),
                    QutationDetailId: parseInt($('.QutationDetailId', this).val()),
                    Qutation_ID: $('#Qutation_ID').val()
                }
                list.push(orderItem);
            }
        });

        if (list.length == 0) {

            $("#orderItemError").text("At least one order item required.");
            isAllValid = false;
        }

        if (isAllValid) {
            $(this).val("please wait...");
            var empObj = {
                Qutation_ID: $('#Qutation_ID').val(),
                RefNumber: $('#RefNumber').val(),
                QutationDate: $('#QutationDate').val(),
                DueDate: $('#DueDate').val(),
                SubTotal: $('#SubTotal').text(),
                DiscountAmount: $('#DiscountAmount').val(),
                QutationID: $('#QutationID').val(),
                TotalVat6: $('#BTW6').text(),
                TotalVat21: $('#BTW21').text(),
                Total: $('#gtotal').text(),
                TotalAmount: $('#gtotal').text(),
                CustomerNote: $('#CustomerNote').val(),
                QutationDetailslist: list
            };
            $.ajax({
                url: "/MVCQutation/savePrintAndSentItToYouronsave",
                data: JSON.stringify(empObj),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    QutationIdd = result.QutationId;
                    localStorage.setItem('path', result.path);
                    if (result.Status == "Success") {
                        swal({
                            title: 'Qutation!',
                            text: 'Qutation save successfully!',
                            type: 'success'
                        },
                        function (isconform) {
                            window.location.href = "/MvcQutation/ViewQuation?quautionId=" + result.QutationId;
                        });
                    }
                    else if (result.Status == "Fail") {

                    }
                },

                error: function (errormessage) {

                }

            });
        }

    });

    function LoadProduct() {
        debugger;
        if ($('#SelectProductQutation').has('option').length > 0) {
            return;
        }
        else {
            $("#SelectProductQutation").find("option").remove();
            $("#SelectProductQutation").prepend("<option value=0>" + 'Select Item' + "</option>");

            $.ajax({
                url: "/MVCProduct/GetProduct",
                type: "Get",
                async: false,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $.each(data, function (key, item) {

                        $('#SelectProductQutation').append($('<option></option>').val(item.ProductId).html(item.ProductName));

                    });

                },
                Error: function (errormessage) {
                    alert(errormessage);
                }

            });
        }



    }

    $('#Rate').keyup(function () {
        currentRow1 = $(this).closest("tr");
        var currentRow = $(this).closest("tr");
        var quantity = currentRow.find("td:eq(1)").find('input').val(); // get current row 1st TD value
        var Price = $(this).val();
        var total = quantity * Price;
        currentRow.find('td:eq(3)').find('input').val(total);
        var sum = 0;
        var vatValue = currentRow1.find('#SelectVAT option:selected').val();
        if (vatValue == 0) {
            $('#btwo').text('0.00');
        }

        if (vatValue == 6) {
            var sum6 = 0;
            var total6 = 0;
            $('#orderdetailsitems tr').each(function () {
                r = $(this).closest('tr');
                var value = r.find('.VAT  option:selected').val();
                if (r.find('.VAT  option:selected').val() == 6) {
                    total6 = r.find('td:eq(3)').find('input').val();
                    if (!isNaN(total6) && total6.length != 0) {
                        sum6 += parseFloat(total6);
                    }
                    var totalvat6 = parseFloat(sum6 / 100 * 6 + sum6 - sum6);
                    $('#BTW6').text(totalvat6.toFixed(2));
                }
            })


        }

        if (vatValue == 21) {
            var sum21 = 0;
            var total21 = 0;
            $('#orderdetailsitems tr').each(function () {
                r = $(this).closest('tr');
                var value = r.find('.VAT  option:selected').val();
                if (r.find('.VAT  option:selected').val() == 21) {
                    total21 = r.find('td:eq(3)').find('input').val();
                    if (!isNaN(total21) && total21.length != 0) {
                        sum21 += parseFloat(total21);
                    }
                    var totalvat21 = parseFloat(sum21 / 100 * 21 + sum21 - sum21);
                    $('#BTW21').text(totalvat21.toFixed(2));
                }

            })
        }


        SUMOFALLPRODUCT();
        sumofGrandModel();
    })

    function SUMOFALLPRODUCT() {
        var sum = 0;
        $('#orderdetailsitems tr').each(function () {
            var row = $(this).closest('tr');
            var total = row.find('td:eq(3)').find('.FTotal ').val();
            if (!isNaN(total) && total.length != 0) {
                sum += parseFloat(total);
            }
            $('#TotalBTW').text(sum.toFixed(2));
            $('#SubTotal').text(sum.toFixed(2));

        })
    }

    function sumofGrandModel() {

        var btw6 = 0, btw21, totalbtw = 0, grandtotal = 0;
        btw6 = parseFloat($('#BTW6').text());
        btw21 = parseFloat($('#BTW21').text());
        totalbtw = parseFloat($('#TotalBTW').text());
        btw6 = isNaN(btw6) ? 0 : btw6;
        btw21 = isNaN(btw21) ? 0 : btw21;
        totalbtw = isNaN(totalbtw) ? 0 : totalbtw;
        grandtotal = parseFloat(btw6) + parseFloat(btw21) + parseFloat(totalbtw);
        var t = parseFloat(grandtotal);
        $('#gtotal').text(t.toFixed(2));
        //
        //if (!isNaN(grandtotal) && grandtotal.length != 0) {
    }

    $(document).on('keyup', '#orderdetailsitems .rate', function () {

        var currentRow1 = $(this).closest("tr");
        var currentRow = $(this).closest("tr");
        var quantity = currentRow.find("td:eq(1)").find('input').val(); // get current row 1st TD value
        var Price = $(this).val();
        var total = quantity * Price;
        currentRow.find('td:eq(3)').find('input').val(total);
        var sum = 0;
        var vatValue = currentRow1.find('.VAT  option:selected').val();
        if (vatValue == 0) {
            $('#btwo').text('0.00');
        }
        if (vatValue == 6) {
            var sum6 = 0;
            var total6 = 0;
            $('#orderdetailsitems tr').each(function () {

                r = $(this).closest('tr');
                var value = r.find('.VAT  option:selected').val();
                if (r.find('.VAT  option:selected').val() == 6) {
                    total6 = r.find('td:eq(3)').find('input').val();
                    if (!isNaN(total6) && total6.length != 0) {
                        sum6 += parseInt(total6);
                    }
                    var totalvat6 = parseFloat(sum6 / 100 * 6 + sum6 - sum6);

                    $('#BTW6').text(totalvat6.toFixed(2));
                }
            })
        }


        if (vatValue == 21) {
            var sum21 = 0;
            var total21 = 0;
            $('#orderdetailsitems tr').each(function () {

                r = $(this).closest('tr');
                var value = r.find('.VAT  option:selected').val();
                if (r.find('.VAT  option:selected').val() == 21) {
                    total21 = r.find('td:eq(3)').find('input').val();
                    if (!isNaN(total21) && total21.length != 0) {
                        sum21 += parseInt(total21);
                    }
                    var totalvat21 = parseFloat(sum21 / 100 * 21 + sum21 - sum21);
                    $('#BTW21').text(totalvat21.toFixed(2));
                }
            })
        }
       
      
        SUMOFALLPRODUCT();
        sumofGrandModel();
        calculatevat();
    });

    var vatValue = 0;
    $(document).on('keyup', '#orderdetailsitems .quantity ', function () {

        var currentRow1 = $(this).closest("tr");
        var currentRow = $(this).closest("tr");
        var Price = currentRow.find("td:eq(2)").find('input').val(); // get current row 1st TD value
        var quantity = $(this).val();  
        var total = quantity * Price;
        currentRow.find('td:eq(3)').find('input').val(total);
        var sum = 0;
        var vatValue = currentRow1.find('.VAT  option:selected').val();
        if (vatValue == 0) {
            $('#btwo').text('0.00');
        }
        if (vatValue == 6) {
            var sum6 = 0;
            var total6 = 0;
            $('#orderdetailsitems tr').each(function () {

                r = $(this).closest('tr');
                var value = r.find('.VAT  option:selected').val();
                if (r.find('.VAT  option:selected').val() == 6) {
                    total6 = r.find('td:eq(3)').find('input').val();
                    if (!isNaN(total6) && total6.length != 0) {
                        sum6 += parseInt(total6);
                    }
                    var totalvat6 = parseFloat(sum6 / 100 * 6 + sum6 - sum6);

                    $('#BTW6').text(totalvat6.toFixed(2));
                }
            })
        }


        if (vatValue == 21) {
            var sum21 = 0;
            var total21 = 0;
            $('#orderdetailsitems tr').each(function () {

                r = $(this).closest('tr');
                var value = r.find('.VAT  option:selected').val();
                if (r.find('.VAT  option:selected').val() == 21) {
                    total21 = r.find('td:eq(3)').find('input').val();
                    if (!isNaN(total21) && total21.length != 0) {
                        sum21 += parseInt(total21);
                    }
                    var totalvat21 = parseFloat(sum21 / 100 * 21 + sum21 - sum21);
                    $('#BTW21').text(totalvat21.toFixed(2));
                }
            })
        }


        SUMOFALLPRODUCT();
        sumofGrandModel();
        calculatevat();
    });

    $('#Quantity').keyup(function () {
        var currentRow = $(this).closest("tr");
        var quantity = $(this).val();  // get current row 1st TD value
        var Price = currentRow.find("td:eq(2)").find('input').val();
        var total = quantity * Price;
        currentRow.find('td:eq(3)').find('input').val(total);
    })

</script>

<script>
    $(document).ready(function () {
        $("#CompanyListTable").DataTable({
            // "processing": true, // for show progress bar
            processing: true,
            "language": {
                "processing": $('#loader').append("<img  src='../images/XtaS.gif' width='100px' height='60px' />"),  //add a loading image,simply putting tag.
            },
            "serverSide": true, // for process server side
            "filter": false, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once

            searching: true,
            "ajax": {
                "url": "/Company/Index1",
                "type": "POST",
                "datatype": "json"
            },
            "columns": [
                    { "data": "CompanyId", "name": "CompanyId", "autoWidth": true },
                    { "data": "ComapanyName", "name": "ComapanyName", "autoWidth": true },
                    { "data": "CompanyAddress", "name": "CompanyAddress", "autoWidth": true },
                    { "data": "CompanyPhone", "name": "CompanyPhone", "autoWidth": true },
                    { "data": "CompanyCell", "name": "CompanyCell", "autoWidth": true },
                    { "data": "CompanyEmail", "name": "CompanyEmail", "autoWidth": true },
                   { "data": "CompanyTRN", "name": "CompanyTRN", "autoWidth": true },
                   {
                       'data': 'CompanyLogo',
                       render: function (logo) {
                           if (logo) {
                               return '<img height="25px" width="25px" src="' + logo + '" />'
                           }
                           else { return 'No Image'; }
                       }
                   },
                  {
                      render: function (data, type, row) {
                          return '<a href="#" class="btn btn-info btn-xs" data-id="Id" onclick="Edit(' + row.CompanyId + ')"><i class="glyphicon glyphicon-pencil "></i></a>|<a href="#" class="btn btn-danger btn-xs" onclick="DeleteCompany(' + row.CompanyId + ')"><i class="glyphicon glyphicon-trash"></i></a>|<a href="#" class="btn btn-success btn-xs" onclick="Delete(' + row.CompanyId + ')"><i class="glyphicon glyphicon-eye-open"></i></a>'
                      }
                  }

            ]
        });
    });

    $(document).ready(function () {
        $("#ContactListTable").DataTable({
            //"processing": true, // for show progress bar
            processing: true,
            "language": {
                "processing": $('#loaderMvcConatc').append("<img  src='../images/XtaS.gif' width='100px' height='60px' />"),  //add a loading image,simply putting tag.
            },
            searching: true,
            "serverSide": true, // for process server side
            "filter": false, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "ajax": {
                "url": "/MVCContacts/GetContactList",
                "type": "POST",
                "datatype": "json"
            },
            "columns": [
                    { "data": "ContactsId", "name": "ContactsId", "autoWidth": true },
                    { "data": "ContactName", "name": "ContactName", "autoWidth": true },
                    { "data": "ContactAddress", "name": "ContactAddress", "autoWidth": true },
                    { "data": "Type", "name": "Type", "autoWidth": true },
                    { "data": "BillingPersonName", "name": "BillingPersonName", "autoWidth": true },
                    { "data": "BillingCompanyName", "name": "BillingCompanyName", "autoWidth": true },
                    { "data": "BillingVatTRN", "name": "BillingVatTRN", "autoWidth": true },
                    { "data": "Status", "name": "Status", "autoWidth": true },
                    {
                        render: function (data, type, row) {
                            return '<a href="" class="btn btn-info btn-xs" data-id="Id" onclick="Edit(' + row.ContactsId + ')"><i class="glyphicon glyphicon-pencil "></i></a>|<a href="" class="btn btn-danger btn-sm" onclick="DeleteCompany(' + row.ContactsId + ')"><i class="glyphicon glyphicon-trash"></i></a>|<a href="" class="btn btn-success btn-xs" onclick="Delete(' + row.ContactsId + ')"><i class="glyphicon glyphicon-eye-open"></i></a>'
                        }
                    }

                   //{
                   //    'data': 'CompanyLogo',
                   //    render: function (logo) {
                   //        if (logo) {
                   //            return '<img height="25px" width="25px" src="' + logo + '" />'
                   //        }
                   //        else { return 'No Image'; }
                   //    }
                   //},
                  //{
                  //    render: function (data, type, row) {
                  //        return '<a href="#" class="btn btn-info btn-xs" data-id="Id" onclick="Edit(' + row.CompanyId + ')"><i class="glyphicon glyphicon-pencil "></i></a>|<a href="#" class="btn btn-danger btn-xs" onclick="DeleteCompany(' + row.CompanyId + ')"><i class="glyphicon glyphicon-trash"></i></a>|<a href="#" class="btn btn-success btn-xs" onclick="Delete(' + row.CompanyId + ')"><i class="glyphicon glyphicon-eye-open"></i></a>'
                  //    }
                  //}

            ]
        });
    });


    function Edit(companyId) {
        window.location.href = "Company/AddOrEdit/" + companyId;
    }

    $(document).ready(function () {
        $("#QutationListTable").DataTable({
            //"processing": true, // for show progress bar
            "processing": true,
            "language": {
                "processing": $('#loaderQuationList').append("<img  src='../images/XtaS.gif' width='100px' height='60px' />"),  //add a loading image,simply putting tag.
            },
            "searching": true,
            "serverSide": true, // for process server side
            "filter": false, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "ajax": {
                "url": "/MVCQutation/IndexQutation",
                "type": "POST",
                "datatype": "json"
            },
            "columns": [
                    { "data": "QutationID", "name": "QutationID", "autoWidth": true },// key for edit delete
                    { "data": "Qutation_ID", "name": "Qutation_ID", "autoWidth": true },
                    { "data": "RefNumber", "name": "RefNumber", "autoWidth": true },


                   {
                       "data": "QutationDate", "type": "date ",
                       "render": function (value) {
                           if (value === null) return "";
                           var pattern = /Date\(([^)]+)\)/;//date format from server side
                           var results = pattern.exec(value);
                           var dt = new Date(parseFloat(results[1]));

                           return dt.getDate() + "/" + (dt.getMonth() + 1) + "/" + dt.getFullYear();
                       }, "autoWidth": true
                   },


                    { "data": "DiscountAmount", "name": "DiscountAmount", "autoWidth": true },
                    { "data": "Status", "name": "Status", "autoWidth": true },

                    {
                        render: function (data, type, row) {
                            return '<a href="#" class="btn btn-info btn-sm" data-id="Id" onclick="EditQuatation(' + row.QutationID + ')"><i class="fa fa-pencil"></i></a>|<a href="#" class="btn btn-danger btn-sm" onclick="DeleteCompany(' + row.QutationID + ')"><i class="fa fa-trash"></i></a>|<a href="#" class="btn btn-success btn-sm" onclick="Delete(' + row.QutationID + ')"><i class="fa fa-eye"></i></a>'
                        }
                    }

            ]
        });

    });


    $(document).ready(function () {

        $("#productTable").DataTable({
            //"processing": true, // for show progress bar
            "processing": true,
            //"language": {
            //    "processing": $('#loaderQuationList').append("<img  src='../images/XtaS.gif' width='100px' height='60px' />"),  //add a loading image,simply putting tag.
            //},
            "searching": true,
            "serverSide": true, // for process server side
            "filter": false, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "ajax": {
                "url": "/MVCProduct/GetProductlist",
                "type": "POST",
                "datatype": "json"
            },
            "columns": [
                    { "data": "ProductId", "name": "ProductId", "autoWidth": true },// key for edit delete
                    { "data": "ProductName", "name": "ProductName", "autoWidth": true },
                    { "data": "Description", "name": "Description", "autoWidth": true },
                    { "data": "SalePrice", "name": "SalePrice", "autoWidth": true },
                    { "data": "PurchasePrice", "name": "PurchasePrice", "autoWidth": true },
                     { "data": "Type", "name": "Type", "autoWidth": true },
                     { "data": "OpeningQuantity", "name": "OpeningQuantity", "autoWidth": true },
                   {
                       "data": "AddedDate", "type": "date ",
                       "render": function (value) {

                           if (value === null) return "";
                           var pattern = /Date\(([^)]+)\)/;//date format from server side
                           var results = pattern.exec(value);
                           var dt = new Date(parseFloat(results[1]));

                           return dt.getDate() + "/" + (dt.getMonth() + 1) + "/" + dt.getFullYear();
                       }, "autoWidth": true
                   },

                    {
                        render: function (data, type, row) {
                            return '<a href="#" class="btn btn-info btn-xs" data-id="Id" onclick="Edit(' + row.ProductId + ')"><i class="glyphicon glyphicon-pencil"></i></a>|<a href="" class="btn btn-danger btn-xs" onclick="DeleteCompany(' + row.ProductId + ')"><i class="glyphicon glyphicon-trash"></i></a>|<a href="" class="btn btn-success btn-xs" onclick="Delete(' + row.ProductId + ')"><i class="glyphicon glyphicon-eye-open"></i></a>'
                        }
                    }

            ]
        });

    })


  



    function EditQuatation(id) {
        window.location.href = "/MvcQutation/AddOrEdit/" + id;
    }

    var $loading = $('#loadingDiv').hide();

    $(document)
      .ajaxStart(function () {
          $loading.show();
      })
      .ajaxStop(function () {
          $loading.hide();
      });
</script>






